// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id           String   @id @default(uuid())
    name         String
    email        String   @unique
    phoneNumber  String?
    status       String
    password     String
    role         String
    profileImage String?
    teacher      Teacher?
    student      Student?
}

model Teacher {
    id              String       @id
    user            User         @relation(fields: [id], references: [id])
    expertise       String?
    bachelorDegree  String?
    masterDegree    String?
    doctorateDegree String?
    description     String?
    nig             String
    subjects        Subject[]
    assignments     Assignment[]
}

model Student {
    id                  String                @id
    user                User                  @relation(fields: [id], references: [id])
    birthDate           DateTime
    nis                 String
    description         String?
    fatherName          String?
    motherName          String?
    guardianName        String?
    contactPhoneNumber  String
    classes             Class[]
    assignmentToStudent AssignmentToStudent[]
}

model Subject {
    id          String       @id @default(uuid())
    name        String
    grade       Int
    startYear   Int
    endYear     Int
    status      String
    teachers    Teacher[]
    classes     Class[]
    assignments Assignment[]
}

model Class {
    id       String    @id @default(uuid())
    name     String
    status   String
    subjects Subject[]
    students Student[]
}

model Assignment {
    id                  String                @id @default(uuid())
    teacher             Teacher               @relation(fields: [teacherId], references: [id])
    teacherId           String
    subject             Subject               @relation(fields: [subjectId], references: [id])
    subjectId           String
    attachmentPath      String?
    status              String
    startTime           DateTime
    endTime             DateTime
    maxGrade            Int
    assignmentToStudent AssignmentToStudent[]
}

model AssignmentToStudent {
    student        Student    @relation(fields: [studentId], references: [id])
    studentId      String
    assignment     Assignment @relation(fields: [assignmentId], references: [id])
    assignmentId   String
    grade          Int
    attachmentPath String

    @@id([studentId, assignmentId])
}
